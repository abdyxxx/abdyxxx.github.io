{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\REACT\\\\flappy\\\\src\\\\Gamezone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Bird from './Bird';\nimport CasinoBottom from './CasinoBottom';\nimport CasinoTop from './CasinoTop';\nimport GameOver from './GameOver';\nimport Modale from './Modale';\nimport { endGame, position, startGame, timerID } from './redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gamezone() {\n  _s();\n\n  const dispatch = useDispatch();\n  const positionState = useSelector(state => state.position.position);\n  const timerIdState = useSelector(state => state.timerID.id);\n  const birdPosition = useSelector(state => state.position.position);\n  const coordsBird = useSelector(state => state.birdCoords.coords);\n  const gameStatus = useSelector(state => state.game.value);\n  const background = useRef(null);\n  const casinoBottomRef = useRef(null);\n  const casinoTopRef = useRef(null);\n  const [isSelected, setIsSelected] = useState(false);\n  const [distance, setDistance] = useState();\n  useEffect(() => {\n    if (gameStatus === 'start') {\n      timerIdState ? console.log('') : dispatch(timerID(setInterval(() => dispatch(position(null, '1px')), 5)));\n      background.current.style.animationName = 'move';\n      casinoBottomRef.current.style.animationName = 'moveCasino';\n      casinoTopRef.current.style.animationName = 'moveCasino';\n    } else if (gameStatus === 'end') {\n      clearInterval(timerIdState);\n      dispatch(position('stop'));\n      dispatch(timerID(false));\n      background.current.style.animationName = '';\n    }\n  }, [gameStatus]);\n  useEffect(() => {\n    console.log(gameStatus);\n\n    if (casinoBottomRef.current) {\n      let casinoBottomCoords = casinoBottomRef.current.getBoundingClientRect();\n      let casinoTopCoords = casinoTopRef.current.getBoundingClientRect();\n\n      if (casinoBottomCoords.left <= 417 && casinoBottomCoords.left >= 267) {\n        console.log(casinoBottomCoords, casinoTopCoords);\n        casinoBottomCoords.top > coordsBird.bottom && casinoTopCoords.bottom > coordsBird.top ? console.log('') : dispatch(endGame());\n      }\n    }\n  }, [positionState]);\n\n  const handleClick = () => {\n    if (isSelected && gameStatus !== 'end') {\n      dispatch(startGame());\n    }\n\n    if (gameStatus === 'start') {\n      dispatch(position('50px'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-zone\",\n    onClick: handleClick,\n    ref: background,\n    children: [gameStatus === 'start' ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Bird, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CasinoBottom, {\n        casinoRef: casinoBottomRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CasinoTop, {\n        casinoRef: casinoTopRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this) : gameStatus === 'end' ? /*#__PURE__*/_jsxDEV(GameOver, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this) : '', isSelected ? '' : /*#__PURE__*/_jsxDEV(Modale, {\n      setIsSelected: setIsSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gamezone, \"jwvEKGnBbD3HC3WzISL9G1vQgXY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Gamezone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamezone\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","useSelector","Bird","CasinoBottom","CasinoTop","GameOver","Modale","endGame","position","startGame","timerID","Gamezone","dispatch","positionState","state","timerIdState","id","birdPosition","coordsBird","birdCoords","coords","gameStatus","game","value","background","casinoBottomRef","casinoTopRef","isSelected","setIsSelected","distance","setDistance","console","log","setInterval","current","style","animationName","clearInterval","casinoBottomCoords","getBoundingClientRect","casinoTopCoords","left","top","bottom","handleClick"],"sources":["C:/Users/admin/Desktop/REACT/flappy/src/Gamezone.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Bird from './Bird';\r\nimport CasinoBottom from './CasinoBottom';\r\nimport CasinoTop from './CasinoTop';\r\nimport GameOver from './GameOver';\r\nimport Modale from './Modale';\r\nimport { endGame, position, startGame, timerID } from './redux/actions';\r\n\r\nexport default function Gamezone() {\r\n    const dispatch = useDispatch();\r\n\r\n    const positionState = useSelector(state => state.position.position);\r\n    const timerIdState = useSelector(state => state.timerID.id);\r\n    const birdPosition = useSelector(state => state.position.position);\r\n    const coordsBird = useSelector(state => state.birdCoords.coords);\r\n    const gameStatus = useSelector(state => state.game.value);\r\n\r\n    const background = useRef(null)\r\n    const casinoBottomRef = useRef(null)\r\n    const casinoTopRef = useRef(null)\r\n\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    const [distance, setDistance] = useState();\r\n\r\n    useEffect(() => {\r\n        if (gameStatus === 'start') {\r\n            timerIdState ? console.log('') : dispatch(timerID(setInterval(() => dispatch(position(null, '1px')), 5)));\r\n            background.current.style.animationName = 'move';\r\n            casinoBottomRef.current.style.animationName = 'moveCasino';\r\n            casinoTopRef.current.style.animationName = 'moveCasino';\r\n        }\r\n        else if (gameStatus === 'end') {\r\n            clearInterval(timerIdState);\r\n            dispatch(position('stop'));\r\n            dispatch(timerID(false))\r\n            background.current.style.animationName = '';\r\n        }\r\n    }, [gameStatus])\r\n\r\n    useEffect(() => {\r\n        console.log(gameStatus)\r\n        if (casinoBottomRef.current) {\r\n            let casinoBottomCoords = casinoBottomRef.current.getBoundingClientRect();\r\n            let casinoTopCoords = casinoTopRef.current.getBoundingClientRect();\r\n\r\n            if (casinoBottomCoords.left <= 417 && casinoBottomCoords.left >= 267) {\r\n                console.log(casinoBottomCoords, casinoTopCoords)\r\n                casinoBottomCoords.top > coordsBird.bottom && casinoTopCoords.bottom > coordsBird.top ? \r\n                console.log('') : dispatch(endGame())\r\n            }\r\n        }\r\n    }, [positionState])\r\n\r\n    const handleClick = () => {\r\n        if (isSelected && gameStatus !== 'end') {\r\n            dispatch(startGame())\r\n        }\r\n        if(gameStatus === 'start'){\r\n            dispatch(position('50px'));\r\n        }\r\n    }\r\n    return (\r\n        <div className='game-zone' onClick={handleClick} ref={background}>\r\n            {gameStatus === 'start' ?\r\n                <React.Fragment>\r\n                    <Bird />\r\n                    <CasinoBottom casinoRef={casinoBottomRef} />\r\n                    <CasinoTop casinoRef={casinoTopRef} />\r\n                </React.Fragment>\r\n                : gameStatus === 'end' ?\r\n                    <GameOver /> : ''\r\n            }\r\n\r\n            {isSelected ? '' : <Modale setIsSelected={setIsSelected} />}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}