{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\REACT\\\\my-app\\\\src\\\\Gamezone.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Bird from './Bird';\nimport CasinoBottom from './CasinoBottom';\nimport CasinoTop from './CasinoTop';\nimport Modale from './Modale';\nimport { position, timerID } from './redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gamezone() {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state.position.position);\n  const timerIdState = useSelector(state => state.timerID.id);\n  const background = useRef(null);\n  const casinoBottomRef = useRef(null);\n  const casinoTopRef = useRef(null);\n  const [gameIsStart, setGameStart] = useState(false);\n  const [distance, setDistance] = useState();\n\n  const handleClick = () => {\n    if (!gameIsStart) {\n      dispatch(timerID(setInterval(() => dispatch(position(null, '-1px')), 5)));\n      setGameStart(true);\n      background.current.style.animationName = 'move';\n      casinoBottomRef.current.style.animationName = 'moveCasino';\n      casinoTopRef.current.style.animationName = 'moveCasino';\n      setInterval(() => setDistance(Math.floor(Math.random() * 100)), 2500);\n    }\n\n    dispatch(position('70px'));\n  };\n\n  const handleRestart = e => {\n    e.stopPropagation();\n    background.current.style.animationName = '';\n    casinoBottomRef.current.style.animationName = '';\n    casinoTopRef.current.style.animationName = '';\n    clearInterval(timerIdState);\n    setGameStart(false);\n    dispatch(position('stop'));\n  };\n\n  const onTransition = e => {\n    console.log('transition end');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-zone\",\n    onClick: handleClick,\n    ref: background,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"RESTART\",\n      onClick: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bird, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CasinoBottom, {\n      casinoRef: casinoBottomRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CasinoTop, {\n      casinoRef: casinoTopRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modale, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gamezone, \"kKAqGL8i+Ztt6xm3jezWm5s/QwE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Gamezone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamezone\");","map":{"version":3,"names":["React","useRef","useState","useDispatch","useSelector","Bird","CasinoBottom","CasinoTop","Modale","position","timerID","Gamezone","dispatch","state","timerIdState","id","background","casinoBottomRef","casinoTopRef","gameIsStart","setGameStart","distance","setDistance","handleClick","setInterval","current","style","animationName","Math","floor","random","handleRestart","e","stopPropagation","clearInterval","onTransition","console","log"],"sources":["C:/Users/admin/Desktop/REACT/my-app/src/Gamezone.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Bird from './Bird';\r\nimport CasinoBottom from './CasinoBottom';\r\nimport CasinoTop from './CasinoTop';\r\nimport Modale from './Modale';\r\nimport { position, timerID } from './redux/actions';\r\n\r\nexport default function Gamezone() {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.position.position);\r\n    const timerIdState = useSelector(state => state.timerID.id);\r\n\r\n    const background = useRef(null)\r\n    const casinoBottomRef = useRef(null)\r\n    const casinoTopRef = useRef(null)\r\n\r\n    const [gameIsStart, setGameStart] = useState(false);\r\n    const [distance, setDistance] = useState();\r\n\r\n    const handleClick = () => {\r\n        if (!gameIsStart) {\r\n            dispatch(timerID(setInterval(() => dispatch(position(null, '-1px')), 5)));\r\n            setGameStart(true);\r\n            background.current.style.animationName = 'move';\r\n            casinoBottomRef.current.style.animationName = 'moveCasino';\r\n            casinoTopRef.current.style.animationName = 'moveCasino';\r\n            setInterval(() => setDistance(Math.floor(Math.random() * 100)), 2500);\r\n        }\r\n        dispatch(position('70px'));\r\n    }\r\n    const handleRestart = (e) => {\r\n        e.stopPropagation();\r\n        background.current.style.animationName = '';\r\n        casinoBottomRef.current.style.animationName = '';\r\n        casinoTopRef.current.style.animationName = '';\r\n        clearInterval(timerIdState);\r\n        setGameStart(false);\r\n        dispatch(position('stop'))\r\n    }\r\n    const onTransition = (e) => {\r\n        console.log('transition end')\r\n    }\r\n    return (\r\n        <div className='game-zone' onClick={handleClick} ref={background}>\r\n            <input type='button' value='RESTART' onClick={handleRestart} />\r\n            <Bird />\r\n            <CasinoBottom casinoRef={casinoBottomRef} />\r\n            <CasinoTop casinoRef={casinoTopRef} />\r\n            <Modale />\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}